{"version":3,"sources":["components/main/MainTemplate/MainTemplate.js","components/main/MainSidebar/MainSidebar.js","containers/main/MainSidebarContainer.js","components/main/MainHeader/MainHeader.js","containers/main/MainHeaderContainer.js","pages/Popular.js","components/bookmark/BookmarkeTemplate.js","components/common/PostCard/PostCard.js","actions/index.js","components/common/LikeButton/LikeButton.js","components/common/BookmarkButton/BookmarkButton.js","containers/item/PostCardContainer.js","components/common/PostCardList/PostCardList.js","containers/list/BookmarkPostCardList.js","pages/Bookmark.js","containers/list/RecentPostCardList.js","pages/Recent.js","containers/main/Main.js","pages/Home.js","components/App.js","lib/api/posts/index.js","reducers/postList.js","reducers/filter.js","reducers/index.js","store/index.js","Root.js","serviceWorker.js","index.js"],"names":["MainTemplate","_ref","children","sidebar","react_default","a","createElement","className","MainSidebar","url","this","props","Link","to","fi","Component","MainSidebarContainer","console","log","match","main_MainSidebar_MainSidebar","withRouter","MainHeader","MainHeaderContainer","main_MainHeader_MainHeader","Popular","BookmarkTemplate","PostCard","href","style","backgroundImage","concat","imgSrc","title","buttons","RECEIVE_POST_LIST","SET_POST_LIST","ADD_POST","TOGGLE_LIKE","TOGGLE_BOOKMARK","SET_FILTER","GET_FILTERED_LIST","SET_POST_LIST_ASYNC","filters","addPost","postItem","type","toggleLike","postId","toggleBookmark","setFilter","filter","getFilteredList","LikeButton","isLiked","onClick","dispatch","ti","connect","BookmarkButton","isBookmark","md","PostCardContainer","postInfo","common_PostCard_PostCard","key","Date","getTime","common_LikeButton_LikeButton","common_BookmarkButton_BookmarkButton","PostCardList","id","postList","map","index","item_PostCardContainer","BookmarkPostCardList","setBookmarkFilter","getBookmarkList","common_PostCardList_PostCardList","state","Bookmark","RecentPostCardList","length","getPostList","setAllFilter","getAllList","Recent","setPostList","isFetching","MainContainer","main_MainTemplate_MainTemplate","main_MainSidebarContainer","main_MainHeaderContainer","Switch","Route","path","component","Home","Main","App","exact","testPostApi","readPosts","watchIncrementAsync","rootSaga","delay","ms","Promise","res","setTimeout","regenerator_default","wrap","_context","prev","next","stop","_marked","_context2","put","_marked2","_context3","takeEvery","_marked3","_context4","all","_marked4","store","arguments","undefined","action","Object","toConsumableArray","postsApi","post","filterPostList","objectSpread","combineReducers","sagaMiddleware","createSagaMiddleware","createStore","reducers","applyMiddleware","run","Root","es","basename","process","HashRouter","components_App","Boolean","window","location","hostname","ReactDOM","render","src_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac84e60f.chunk.js","sourcesContent":["// @flow\nimport React, { type Node } from 'react';\n\nimport './MainTemplate.scss';\n\ntype Props = {\n    children: Node,\n    sidebar: Node,\n}\n\nconst MainTemplate = ({children, sidebar}: Props) => (\n    <div className=\"MainTemplate\">\n        {sidebar}\n        {children}\n    </div>\n);\n\nexport default MainTemplate;","// @flow\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiHome, FiThumbsUp, FiBookmark } from 'react-icons/fi';\nimport './MainSidebar.scss';\n\ntype Props = {\n    url: string,\n};\n\nclass MainSidebar extends Component<Props> {\n    render() {\n        const { url } = this.props;\n        return(\n            <aside className=\"MainSidebar\">\n                <div className=\"logo\">\n                    Blog\n                </div>\n                <ul className=\"menu\">\n                    <li className={url === '/recent' ? 'active' : ''}>\n                        <Link to={'/recent'}>\n                            <FiHome/>\n                            <div className=\"title\">Home</div>\n                        </Link>\n                    </li>\n                    <li className={url === '/popular' ? 'active' : ''}>\n                        <Link to={'/popular'}>\n                            <FiThumbsUp/>\n                            <div className=\"title\">Popular</div>\n                        </Link>\n                    </li>\n                    <li className={url === '/bookmark' ? 'active' : ''}>\n                        <Link to={'/bookmark'}>\n                            <FiBookmark/>\n                            <div className=\"title\">Bookmark</div>\n                        </Link>\n                    </li>\n                </ul>\n            </aside>\n        )\n    }\n}\n\nexport default MainSidebar;","// @flow\n\nimport React, { Component } from 'react';\nimport MainSidebar from '../../components/main/MainSidebar';//'components/main/MainSidebar/MainSidebar';\nimport { withRouter, type Match } from 'react-router-dom';\n\ntype Props = {\n    match: Match,\n  };\n\nclass MainSidebarContainer extends Component<Props> {\n    render() {\n        console.log('MainSidebarContainer', this.props)\n        const { match } = this.props;\n\n        return <MainSidebar url={match.url}/>;\n    }\n}\n\nexport default withRouter(MainSidebarContainer);","// @flow\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiHome, FiThumbsUp, FiBookmark } from 'react-icons/fi';\nimport './MainHeader.scss';\n\ntype Props = {\n    url: string,\n};\n\nclass MainHeader extends Component<Props> {\n    render() {\n        const { url } = this.props;\n        return(\n            <aside className=\"MainHeader\">\n                <div className=\"logo\">\n                    Blog\n                </div>\n                <ul className=\"menu\">\n                    <li className={url === '/recent' ? 'active' : ''}>\n                        <Link to={'/recent'}>\n                            <FiHome/>\n                        </Link>\n                    </li>\n                    <li className={url === '/popular' ? 'active' : ''}>\n                        <Link to={'/popular'}>\n                            <FiThumbsUp/>\n                        </Link>\n                    </li>\n                    <li className={url === '/bookmark' ? 'active' : ''}>\n                        <Link to={'/bookmark'}>\n                            <FiBookmark/>\n                        </Link>\n                    </li>\n                </ul>\n            </aside>\n        )\n    }\n}\n\nexport default MainHeader;","// @flow\n\nimport React, { Component } from 'react';\nimport MainHeader from '../../components/main/MainHeader';\nimport { withRouter, type Match } from 'react-router-dom';\n\ntype Props = {\n    match: Match,\n  };\n\nclass MainHeaderContainer extends Component<Props> {\n    render() {\n        const { match } = this.props;\n\n        return <MainHeader url={match.url}/>;\n    }\n}\n\nexport default withRouter(MainHeaderContainer);","// @flow\nimport React, { Component } from 'react';\n\ntype Props = {};\n\nclass Popular extends Component<Props> {\n  render() {\n    return <div>Popular</div>;\n  }\n}\n\nexport default Popular;","// @flow\nimport React, { type Node } from 'react';\n\nimport './BookmarkTemplate.scss';\n\ntype Props = {\n    children: Node\n}\n\nconst BookmarkTemplate = ({children}: Props) => (\n    <div className=\"BookmarkTemplate\">{children}</div>\n);\n\nexport default BookmarkTemplate;","// @flow\nimport React from 'react';\nimport './PostCard.scss';\n\ntype Props = {\n    imgSrc: string;\n    title: string;\n}\n\nconst PostCard = (props: Props) => {\n    return (\n        <div className=\"PostCard\">\n        {/* <div className=\"image\">\n            <img src={props.imgSrc} alt={props.title}></img>\n        </div> */}\n        <a className=\"card-image\" href=\"bookmark\">\n            <div className=\"image\" style={{'backgroundImage':`url(${props.imgSrc})`}}></div>\n        </a>\n        <div className=\"title\">\n            {props.title}\n        </div>\n        <div className=\"buttons\">\n            {props.buttons}\n        </div>\n        \n        </div>\n    )\n}\n\nexport default PostCard;","/*\n * action types\n */\nexport const GET_POST_LIST = 'GET_POST_LIST';\nexport const RECEIVE_POST_LIST = 'RECEIVE_POST_LIST';\nexport const SET_POST_LIST = 'SET_POST_LIST';\nexport const ADD_POST = 'ADD_POST';\nexport const TOGGLE_LIKE = 'TOGGLE_LIKE';\nexport const TOGGLE_BOOKMARK = 'TOGGLE_BOOKMARK';\nexport const SET_FILTER = 'SET_FILTER';\nexport const GET_FILTERED_LIST = 'GET_FILTERED_LIST';\nexport const SET_POST_LIST_ASYNC = 'SET_POST_LIST_ASYNC';\n\nexport const filters = {\n    SHOW_ALL: 'SHOW_ALL',\n    SHOW_POPULAR: 'SHOW_POPULAR',\n    SHOW_BOOKMARKED: 'SHOW_BOOKMARKED'\n}\n\n/*\n * action creators\n */\n\nexport function setPostList(postList) {\n    return { type: SET_POST_LIST, postList }\n}\n\nexport function getPostList() {\n    return { type: SET_POST_LIST_ASYNC, isFetching: true }\n}\n\nexport function receivePostList(res) {\n  return { type: RECEIVE_POST_LIST, isFetching: false, postList: res.postList }\n}\n\nexport function addPost(postItem) {\n    return { type: ADD_POST, postItem }\n}\n\nexport function toggleLike(postId) {\n  return { type: TOGGLE_LIKE, postId }\n}\n\nexport function toggleBookmark(postId) {\n  return { type: TOGGLE_BOOKMARK, postId }\n}\n\nexport function setFilter(filter) {\n    return { type: SET_FILTER, filter }\n}\n\nexport function getFilteredList(filter) {\n    return { type: GET_FILTERED_LIST, filter: filter }\n}","// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './LikeButton.scss';\nimport { TiHeartOutline, TiHeartFullOutline } from 'react-icons/ti';\nimport { toggleLike } from '../../../actions';\n\ntype Props = {\n    postId: number;\n    isLiked: boolean;\n}\n\nlet LikeButton = (props: Props) => {\n    if(props.isLiked) {\n        return (<span className=\"clicked\" onClick={()=>{props.dispatch(toggleLike(props.postId))}}><TiHeartFullOutline/></span>)\n    } else {\n        return (<span className=\"unclicked\" onClick={()=>{props.dispatch(toggleLike(props.postId))}}><TiHeartOutline/></span>)\n    }\n}\n\nLikeButton = connect()(LikeButton)\nexport default LikeButton;","// @flow\nimport React from 'react';\nimport './BookmarkButton.scss';\nimport { MdBookmark, MdBookmarkBorder } from 'react-icons/md';\nimport { connect } from 'react-redux';\nimport { toggleBookmark } from '../../../actions';\n\ntype Props = {\n    postId: number;\n    isBookmark: boolean;\n}\n\nlet BookmarkButton = (props: Props) => {\n    if(props.isBookmark) {\n        return (<span className=\"clicked\" onClick={()=>{props.dispatch(toggleBookmark(props.postId))}}><MdBookmark/></span>)\n    } else {\n        return (<span className=\"unclicked\" onClick={()=>{props.dispatch(toggleBookmark(props.postId))}}><MdBookmarkBorder/></span>)\n    }\n}\nBookmarkButton = connect()(BookmarkButton)\nexport default BookmarkButton;","// flow\nimport React from 'react';\nimport PostCard from '../../components/common/PostCard';\nimport LikeButton from '../../components/common/LikeButton';\nimport BookmarkButton from '../../components/common/BookmarkButton';\ntype Props = {\n}\n\nconst PostCardContainer  = (props: Props) => {\n    const { postInfo } = props;\n    return (\n        <PostCard\n            key={new Date().getTime()}\n            imgSrc={postInfo.imgSrc}\n            title={postInfo.title}\n            buttons={[<LikeButton key={`${new Date().getTime()}-like`} isLiked={postInfo.isLiked} postId={postInfo.postId}/>, <BookmarkButton key={`${new Date().getTime()}-bookmark`} isBookmark={postInfo.isBookmark} postId={postInfo.postId}/>]}\n        /> \n    )\n}\n\nexport default PostCardContainer;","// @flow\nimport React from 'react';\nimport './PostCardList.scss';\nimport PostCardContainer from '../../../containers/item/PostCardContainer';\ntype Props = {\n\n}\n\nconst PostCardList = (props: Props) => {\n    console.log('PostCardList', props)\n    \n    return (\n    <div id=\"PostCardList\">\n        <div className=\"post-card-list\">\n        {\n            props.postList.map((postItem, index) => {\n                return <PostCardContainer key={`${postItem.title}-${index}`} postInfo={postItem}/>\n            })\n        }\n        </div>\n    </div>\n        )\n}\n\nexport default PostCardList;","// flow\nimport React, { Component } from 'react';\nimport PostCardList from '../../components/common/PostCardList';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions';\n// type Props = {\n\n// }\nconst mapStateToProps = state => {\n    console.log('bookmark post card list mapStateToProps',state);\n    return {\n      postList: state.postList,\n      filter: state.filter\n    }\n  }\n  \nconst mapDispatchToProps = dispatch => {\n    return {\n        addPost: postItem => {\n            dispatch(addPost(postItem))\n        }\n    }\n}\n\nclass BookmarkPostCardList extends Component {\n    \n    componentDidMount() {\n        this.props.setBookmarkFilter()\n        this.props.getBookmarkList(this.props.postList);\n        console.log(this.props)\n    }\n    render() {\n        return (\n            <div>\n                <h2>Bookmark Post</h2>\n                <PostCardList postList={this.props.postList}/>            \n            </div>\n        )\n    }\n}\nBookmarkPostCardList = connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BookmarkPostCardList)\nexport default BookmarkPostCardList;","// @flow\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BookmarkTemplate from '../components/bookmark/BookmarkeTemplate';\nimport BookmarkPostCardList from '../containers/list/BookmarkPostCardList';\nimport { getFilteredList, setFilter } from '../actions';\ntype Props = {};\n\nconst mapStateToProps = state => {\n  console.log('bookmark mapStateToProps', state);\n  return {\n    postList: state.postList,\n    filter: state.filter\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setBookmarkFilter: () => {\n        dispatch(setFilter('SHOW_BOOKMARKED'))\n      },\n      getBookmarkList: () => {\n          dispatch(getFilteredList('SHOW_BOOKMARKED'))\n      }\n  }\n}\n\nclass Bookmark extends Component<Props> {\n  render() {\n    return (\n      <BookmarkTemplate>\n        <BookmarkPostCardList/>\n      </BookmarkTemplate>\n    );\n  }\n}\n\nBookmark = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BookmarkPostCardList)\nexport default Bookmark;","// flow\nimport React, { Component } from 'react';\nimport PostCardList from '../../components/common/PostCardList';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions';\n// type Props = {\n\n// }\nconst mapStateToProps = state => {\n    console.log('recent post card list mapStateToProps',state);\n    return {\n      postList: state.postList,\n      filter: state.filter\n    }\n  }\n  \nconst mapDispatchToProps = dispatch => {\n    return {\n        addPost: postItem => {\n            dispatch(addPost(postItem))\n        }\n    }\n}\n\nclass RecentPostCardList extends Component {\n    \n    componentDidMount() {\n        if(this.props.postList.length === 0) {\n            this.props.getPostList();\n        }\n        this.props.setAllFilter();\n        this.props.getAllList();\n    }\n    render() {\n        return (\n            <div>\n                <h2>Recent Post</h2>\n                <PostCardList postList={this.props.postList}/>            \n            </div>\n        )\n    }\n}\nRecentPostCardList = connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(RecentPostCardList)\nexport default RecentPostCardList;","// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addPost, setPostList, setFilter, getPostList, getFilteredList } from '../actions';\nimport RecentTemplate from '../components/recent/RecentTemplate/RecentTemplate';\nimport RecentPostCardList from '../containers/list/RecentPostCardList';\n// type Props = {};\n\nconst mapStateToProps = state => {\n    console.log('mapStateToProps',state);\n    return {\n      postList: state.postList,\n      filter: state.filter\n    }\n  }\n  \nconst mapDispatchToProps = dispatch => {\n    return {\n        addPost: postItem => {\n            dispatch(addPost(postItem))\n        },\n        setPostList: postList => {\n            dispatch(setPostList(postList))\n        },\n        getPostList: () => {\n            dispatch(getPostList())\n        },\n        setAllFilter: () => {\n            dispatch(setFilter('SHOW_All'))\n        },\n        getAllList: (filter) => {\n            dispatch(getFilteredList('SHOW_All'))\n        }\n    }\n}\n\nlet Recent = (props) => {\n    return (\n        <RecentTemplate>\n            <RecentPostCardList/>\n        </RecentTemplate>\n    )\n}\n\nRecent = connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(RecentPostCardList)\nexport default Recent;","// @flow\nimport React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport MainTemplate from '../../components/main/MainTemplate';//'components/main/MainTemplate';\nimport MainSidebarContainer from '../../containers/main/MainSidebarContainer';//'containers/main/MainSidebarContainer';\nimport MainHeaderContainer from '../../containers/main/MainHeaderContainer';\nimport Popular from '../../pages/Popular';\nimport Bookmark from '../../pages/Bookmark';\nimport Recent from '../../pages/Recent';\n\ntype Props = {\n    landing: boolean,\n  }\n\n  \n\nclass MainContainer extends Component<Props> {\n\n    \n    render() {\n        return (\n            <MainTemplate sidebar={<MainSidebarContainer/>}>\n                <MainHeaderContainer/>\n                <Switch>\n                    <Route path=\"/recent\" component={Recent}/>\n                    <Route path=\"/popular\" component={Popular}/>\n                    <Route path=\"/bookmark\" component={Bookmark}/>\n                </Switch>\n            </MainTemplate>\n        )\n    }\n}\n\nexport default MainContainer;\n","// @flow\nimport React, { Component } from 'react';\nimport Main from '../containers/main/Main';\n\ntype Props = {\n}\n\nclass Home extends Component<Props> {\n    render() {\n        return (\n            <Main/>\n        )\n    }\n}\nexport default Home","import React from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport { Home } from '../pages';\n// import Popular from 'pages/Popular';\n// import Bookmark from 'pages/Bookmark';\n\nconst App = () => (\n    <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/:mode(recent|popular|bookmark)\" component={Home} />\n    </Switch>\n)\n\nexport default App","import { put, takeEvery, all } from 'redux-saga/effects';\nconst delay = (ms) => new Promise(res => setTimeout(res, ms));\n\nexport function* testPostApi() {\n    yield delay(1000);\n}\nexport function* readPosts() {\n    yield delay(2000);\n    const postList = [\n        {\n            postId: 1,\n            title: \"Jessica Jones with remarkable abilities in New York City.\" ,\n            imgSrc:\"https://mblogthumb-phinf.pstatic.net/20160414_22/shgusgnl66_14606201040627JSqU_JPEG/Marvels.Jessica.Jones.S01E05.AKA.The.Sandwich.Saved.Me.720p.NF.WEBRip.DD5.1.x264.JPG?type=w2\",\n            isLiked: true,\n            isBookmark: false\n        }, {\n            postId: 2,\n            title: \"Stranger Things season 3 is comming this summer.\",\n            imgSrc:\"https://i.pinimg.com/originals/f9/60/a0/f960a0b17088c116e2b154de877b94c7.gif\",\n            isLiked: true,\n            isBookmark: true\n        }, {\n            postId: 3,\n            title: \"You can find out Silver Lining.\",\n            imgSrc:\"https://i-h1.pinimg.com/564x/ef/cc/ab/efccab1f0c3192f98be0b6000b1e94e7.jpg\",\n            isLiked: true,\n            isBookmark: true\n        }, {\n            postId: 4,\n            title: \"Call me by your name\",\n            imgSrc:\"https://i-h1.pinimg.com/564x/a5/ae/12/a5ae12f19bd35ef6d16bbfb3c26b5bea.jpg\",\n            isLiked: false,\n            isBookmark: true\n        }, {\n            postId: 5,\n            title: \"Love or Death\",\n            imgSrc:\"https://i-h1.pinimg.com/564x/2b/e3/a4/2be3a481ee89631eb17b136ed2e122d0.jpg\",\n            isLiked: true,\n            isBookmark: false\n        }, {\n            postId: 6,\n            title: \"Who is Blue??!\",\n            imgSrc:\"https://i-h1.pinimg.com/564x/1e/59/ab/1e59ab634dab7cea100b8b1e36ba79d7.jpg\",\n            isLiked: true,\n            isBookmark: true\n        }\n    ];\n    \n    console.log(postList, '???????????????????')\n    // return postList;\n    yield put({ type: 'SET_POST_LIST', postList })\n}\n\nexport function* watchIncrementAsync() {\n    yield takeEvery('SET_POST_LIST_ASYNC', readPosts)\n}\n\nexport default function* rootSaga() {\n    yield all([\n        watchIncrementAsync(),\n        testPostApi()\n    ])\n    \n}","import {\n    GET_POST_LIST,\n    RECEIVE_POST_LIST,\n    SET_POST_LIST,\n    ADD_POST,\n    TOGGLE_LIKE,\n    TOGGLE_BOOKMARK,\n    GET_FILTERED_LIST\n} from '../actions';\nimport * as postsApi from '../lib/api/posts';\n\nconst store = {\n    postList: []\n}\n\nconst postList = (state=[], action) => {\n    console.log(state, action, store)\n    switch(action.type) {\n        case SET_POST_LIST:\n            store.postList = [...action.postList];\n            return [...action.postList]\n        case GET_POST_LIST:\n            postsApi.readPosts();\n            return action.postList ? [...action.postList] : [...state]; // @TODO: 비동기 통신하도록 수정해야함\n        case GET_FILTERED_LIST:\n            return filterPostList([...store.postList], action.filter)\n        case RECEIVE_POST_LIST:\n            return action;\n        case ADD_POST:\n        return [\n            ...state,\n            action.postItem\n          ]\n        case TOGGLE_LIKE:\n            return state.map(postItem => {\n                if(postItem.postId === action.postId) {\n                    return {...postItem, isLiked: !postItem.isLiked}\n                }\n                return postItem;\n            })\n        case TOGGLE_BOOKMARK:\n            return state.map(postItem => {\n                if(postItem.postId === action.postId) {\n                    return {...postItem, isBookmark: !postItem.isBookmark}\n                }\n                return postItem;\n            })\n        default:\n            return state;\n    }\n}\n\nfunction filterPostList(postList, filter) {\n    if(filter === 'SHOW_ALL' ) {\n      return  postList;\n    } else if(filter === 'SHOW_POPULAR') {\n      return  postList;\n    } else if( filter === 'SHOW_BOOKMARKED') {\n      return postList.filter(post => post.isBookmark);\n    } else {\n      return postList;\n    }\n  }\n\nexport default postList","import { SET_FILTER, filters } from '../actions';\n\nconst filter = (state = filters.SHOW_ALL, action) => {\n    switch (action.type) {\n      case SET_FILTER:\n        return action.filter\n      default:\n        return state\n    }\n  }\n\n  export default filter;","import { combineReducers } from 'redux';\nimport postList from './postList';\nimport filter from './filter';\n\nexport default combineReducers({\n    postList,\n    filter\n  })","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from '../reducers';\nimport postsApi from '../lib/api/posts'\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n    reducers,\n    applyMiddleware(sagaMiddleware)\n)\nsagaMiddleware.run(postsApi)\n\n// const action = type => store.dispatch({type})\n\nexport default store;","// @flow\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\nimport store from './store';\n\nconst Root = () => (\n    <Provider store={store} basename={process.env.PUBLIC_URL}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>\n);\n\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}